<?php

/**
 * @file
 * Contains custom_survey.module..
 */
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\InvokeCommand;

function custom_survey_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  switch ($form_id){
    case 'user_form':
    case 'user_register_form':
      $form['field_completes_redirect']['widget']['#suffix'] = '<div class="field_completes_redirect_radio-field"> </div>';
      $form['field_quota_full_redirect']['widget']['#suffix'] = '<div class="field_quota_full_redirect_radio-field"> </div>';
      $form['field_terminates_redirect']['widget']['#suffix'] = '<div class="field_terminates_redirect_radio-field"> </div>';
      $form['#attached']['library'][] = 'custom_survey/custom_survey.node_survey_partner';
      break;
    case 'node_survey_edit_form':
    case 'node_survey_form':
      $form['field_survey_link']['widget']['#suffix'] = '<div class="field_survey_link_radio-field"> </div>';
      $form['#attached']['library'][] = 'custom_survey/custom_survey.node_survey_partner';
    break;
    case '_node_survey_form':
      $form['field_name']['widget']['#suffix'] = '<div class="field_name_radio-field"> </div>';
      $form['#attached']['library'][] = 'respondents/respondents.node_survey_partner';
      break;
    case 'node_partner_s_assigned_survey_edit_form':
    case 'node_partner_s_assigned_survey_form':
      $form['#validate'][] = 'partner_s_assigned_survey';
      $form['field_company_name']['widget']['#ajax'] = [
        'callback' => 'ajaxDependentField',
        'event' => 'change',
        'wrapper' => 'ajax-field_company_name-container'
      ];
      $form['field_survey_name']['#prefix'] = '<div id="ajax-field_company_name-container">';
      $form['field_survey_name']['#suffix'] = '</div>';
      if($form_state->getValue('field_company_name')) {
        $company_id = $form_state->getValue('field_company_name')[0]['target_id'];
        $form['field_survey_name']['widget']['#options'] = get_survey_option($company_id);
      }
      elseif(!empty($form['field_company_name']['widget']['#default_value'][0])) {
        $company_id = $form['field_company_name']['widget']['#default_value'][0];
        $form['field_survey_name']['widget']['#options'] = get_survey_option($company_id);
      }

      $form['field_partner_name']['widget']['#ajax'] = [
        'callback' => 'ajaxAutoSelectedField',
        'event' => 'change',
      ];

      $form['field_completes_redirect']['widget']['#suffix'] = '<div class="field_completes_redirect_radio-field"> </div>';
      $form['field_quota_full_redirect']['widget']['#suffix'] = '<div class="field_quota_full_redirect_radio-field"> </div>';
      $form['field_terminates_redirect']['widget']['#suffix'] = '<div class="field_terminates_redirect_radio-field"> </div>';

      $form['#attached']['library'][] = 'custom_survey/custom_survey.node_survey_partner';
      break;
  }
}

function ajaxDependentField(array &$form, FormStateInterface $form_state) {
  return $form['field_survey_name'];
}

function get_survey_option($company_id){
  $database = \Drupal::database();
  return ['_none' => '- Select a value -'] + $database->query("SELECT n.nid, n.title FROM {node_field_data} n
    INNER JOIN {node__field_company_name} cn ON cn.entity_id = n.nid
    WHERE cn.field_company_name_target_id = :company_id AND n.type = :type
    AND n.status = 1", [":company_id" => $company_id, ':type' => 'survey'])->fetchAllKeyed(0, 1);
}

function ajaxAutoSelectedField(array &$form, FormStateInterface $form_state){
  $ajax_response = new AjaxResponse();
  $partner_id = 0;
  $partner_name = $form_state->getValue('field_partner_name');
  $redirect['field_completes_redirect'] = '';
  $redirect['field_identifier_of_completes'] = '';
  $redirect['field_quota_full_redirect'] = '';
  $redirect['field_identifier_of_quota_full'] = '';
  $redirect['field_terminates_redirect'] = '';
  $redirect['field_identifier_of_terminates'] = '';
  if(!empty($partner_name)) {
    $partner_id = $partner_name[0]['target_id'];
    $user_storage = \Drupal::entityTypeManager()->getStorage('user');
    $account = $user_storage->load($partner_id);
    $redirect['field_completes_redirect'] = $account->get('field_completes_redirect')->getString();
    $redirect['field_identifier_of_completes'] = $account->get('field_identifier_of_completes')->getString();
    $redirect['field_quota_full_redirect'] = $account->get('field_quota_full_redirect')->getString();
    $redirect['field_identifier_of_quota_full'] = $account->get('field_identifier_of_quota_full')->getString();
    $redirect['field_terminates_redirect'] = $account->get('field_terminates_redirect')->getString();
    $redirect['field_identifier_of_terminates'] = $account->get('field_identifier_of_terminates')->getString();
  }
  $ajax_response->addCommand(new InvokeCommand(NULL, 'ajaxAutoSelectedFieldMethod', [$redirect]));
  return $ajax_response;
}

/**
  * Validate 'Total survey required' per partner.
  */
function partner_s_assigned_survey(array &$form, FormStateInterface $form_state) {
  $database = \Drupal::database();
  $values = $form_state->cleanValues()->getValues();

  // Current partner total survey required.
  $cur_par_requ_srv = $form_state->getValue('field_total_survey_required')[0]['value'];

  //Get current noid id in case of edit.
  $cur_nid = $form_state->getformObject()->getEntity()->id();

  //Get surbey id.
  $suvery_id = $form_state->getValue('field_survey_name')[0]['target_id'];

  // Get total no of survey required.
  $result = $database->select('node__field_completes_required', 'rv')
                    ->condition('rv.entity_id', $suvery_id, '=')
                    ->fields('rv', ['field_completes_required_value']);
  $results = $result->execute();

  foreach ($results as $key => $value) {
    $total_srv_req = $value->field_completes_required_value;
  }

  //No of survey allocated.
  $total_allo_srv = 0;
  $result = $database->select('node__field_total_survey_required', 'rq')
                    ->condition('rq.entity_id', $cur_nid, '!=')
                    ->fields('rq', ['field_total_survey_required_value']);
  $results = $result->execute();

  foreach ($results as $key => $value) {
    $total_allo_srv = $total_allo_srv + $value->field_total_survey_required_value;
  }

  $max_srv_ass = ($total_srv_req - $total_allo_srv);
  if ($cur_par_requ_srv > $max_srv_ass) {
    $msg = 'Maximum survey can be assign ' . $max_srv_ass;
    return $form_state->setErrorByName('field_total_survey_required', t($msg));
  }

}
